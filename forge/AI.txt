=== FORGE ===
=== AI ===

Learning Tasks: https://www.tensorflow.org/agents/tutorials/0_intro_rl

7 Parts:
	- Search Algorithm: (Minimax, Negamax, MCTS) (each preferably with iterative-deepening)
	- Evaluation Function: (Heuristic) (DNN, Linear Combination)
		- For traditional heurists: https://hxim.github.io/Stockfish-Evaluation-Guide/
	- Exit Condition: (timout, depth limit reached, node limit reached, event requented exit, goal reached)
	- Move Generator: 
		- pseudo valid move generator (any valid moves not considering own king checks)
		- move validator (which pseudo legal moves follow the rules)
	- Game State (Needs node tree to solve draws) 
		(Basically, is Node a leaf or a branch?)
		- White wins?
		- Black wins?
		- Draw?
		- Keep playing?
	- Data Keeper (Sends data to UCI and other views as search progresses)
		*** See SearchMonitor.txt
	- Opening Database

Search algorithms:
	- must have an exit condition that can change as it is searching.
	
Exit Condition:
	- node limit
	- depth(ply) limit
	- time limit
	- stop command (from UCI)
	- or maybe even it decides on its own
	- all leaf node reached

Search modes:
	- search for a mate in <x> moves
	- search for best move

