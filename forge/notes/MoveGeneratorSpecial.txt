=== Forge ===
=== Move Generator Special ===

https://peterellisjones.com/posts/generating-legal-chess-moves-efficiently/

Things we will need to calculate:
	- Threatened squares - BitBoard
	- King pins - BitBoard
	- Direction of King pins - ???
	- Square of checking pieces - BitBoard
	- Single Checks - ???
	- Double Checks - ???
	- Is attacker blockable (Only ray pieces can be blocked) - bool
	- Is attacker defended (If so, our king can't capture it) - bool
	- Where can we move King to safty - BitBoard

1.) Who's turn is it anyway?
	- Easy

2.) Preprocessing - Calculate BitBoard for threats against King.
	- We are only conserned with the 9 squares that suround and hold the King.
	- We need each direction attackable by opponent:
		- If they have diagonal pieces (QB) we need to search diagonal
		- If they have lateral pieces (QR) we need to search lateral
		- If they have knights (N) we need to search knight moves
		- If they have pawns (p) we need to search pawn captures
		* When evaluating these, we need to remove King from board (or just ignore it)
	- Call these "KingDangerSquares"
	- Store as BitBoard

3.) Determine how many times King is attacked.
	3-2.) King is attacked 2 times (Double-Check)
	3-1.) King is attacked 1 time (Single-Check)
	3-0.) King is not attacked




	